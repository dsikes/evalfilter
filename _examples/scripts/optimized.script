//
// This is an example which demonstrates how well our interpreter
// can optimize simple code.
//
// You can run this via the `evalfilter` command like so:
//
//    $ evalfilter run optimized.script
//
// Once you do so you'll see the output, and the return-code displayed:
//
//    $ evalfilter run optimized.script
//    OK
//    Script gave result type:BOOLEAN value:false - which is 'false'.
//
// More interestingly you can dump the generated byecode via:
//
//    $ evalfilter bytecode optimized.script
//    ...
//
// The output will just show the (unconditional) invokation of the
// `print` function, and the return.  Because the expression in the
// `if`-statement is constant (7 == 7) it was removed.
//
// You can see the initial/naive compilation by outputing the bytecode
// with the optimizer disabled:
//
//    $ evalfilter bytecode -no-optimizer optimized.script
//    ...
//


if ( 1 + 2 * 3 == 7 ) {
   print("OK\n");
}

return( true );
